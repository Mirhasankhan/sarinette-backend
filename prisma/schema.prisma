datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id           String       @id @default(auto()) @map("_id") @db.ObjectId
  userName     String
  publicName   String
  phone        String?
  profileImage String?
  email        String       @unique
  password     String
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  payment      Payment[]
  manuscript   Manuscript[]

  @@map("users")
}

model Otp {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  otpCode   String
  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("otps")
}

model Manuscript {
  id          String             @id @default(auto()) @map("_id") @db.ObjectId
  userId      String             @db.ObjectId
  title       String
  description String
  documentUrl String
  sold        Int                @default(0)
  profileUrl  String
  audioUrl    String
  category    ManuscriptCategory
  createdAt   DateTime           @default(now())
  updatedAt   DateTime           @updatedAt

  user     User      @relation(fields: [userId], references: [id])
  reviews  Review[]
  payments Payment[]

  @@map("manuscripts")
}

model Review {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  manuscriptId String   @db.ObjectId
  rating       Int
  comment      String?
  createdAt    DateTime @default(now())

  manuscript Manuscript @relation(fields: [manuscriptId], references: [id], onDelete: Cascade)

  @@map("reviews")
}

model RecentSearch {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  searchTerm String
  createdAt  DateTime @default(now())
}

model Payment {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  userId       String   @db.ObjectId
  amount       Float
  currency     String
  manuscriptId String   @db.ObjectId
  stripeId     String   @unique
  createdAt    DateTime @default(now())

  user       User       @relation(fields: [userId], references: [id])
  manuscript Manuscript @relation(fields: [manuscriptId], references: [id])

  @@map("payments")
}

enum ManuscriptCategory {
  FICTION
  NON_FICTION
  TECHNOLOGY
  POETRY
  SCREENPLAY
  BUSINESS
  NATURE
  TRAVEL
  ARTICLE
}
